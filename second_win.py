from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import *
class TestWin(QWidget):
    def __init__ (self):
        super().__init__()
        self.initUI()
        self.connects()
        self.set_appear()
        self.show()
    def next_click(self):
        self.tw - TestWin()
        self.hide()
    def connects(self):
        self.btn_next.clicked.connect(self.next_click)
    def set_appear(self):
        self.my_wid.setWindowTitle('Второй экран')
        self.my_wid.move(900,70)
        self.my_wid.resize(400,200)
    def initUI(self):
        self.name = QLabel('Введите Ф. И. О.:')
        self.name1 = QLineEdit('')
        self.age = QLabel('Полных лет:')
        self.age1 = QLineEdit('')
        self.text1 = QLabel('Лягте на спину и замерьте пульс за 15 секунд. Нажмите кнопку "Начать первый тест", чтобы запустить таймер.')
        self.text2 = QLabel('Результат запишите в соответствующее поле.')
        self.button1 = QPushButton('Начать первый тест')
        self.pulse = QLineEdit('')
        self.text3 = QLabel('Выполните 30 приседаний за 45 секунд. Для этого нажмите кнопку "Начать делать приседания",')
        self.text4 = QLabel('чтобы запустить счетчик приседаний.')
        self.button2 = QPushButton('Начать делать приседания')
        self.text5 = QLabel('Лягте на спину и замерьте пульс сначала за первые 15 секунд минуты, затем за последние 15 секунд.')
        self.text6 = QLabel('Нажмите на кнопку "Начать финальный тест", чтобы запустить таймер.')
        self.text7 = QLabel('Зеленым обозначены секунды, в течение которых необходимо')
        self.text8 = QLabel('проводить измерения, черным - минуты без замера пульсации. Результаты запишите в соответствующие поля.')
        self.button3 = QPushButton('Начать финальный тест')
        self.pulse1 = QLineEdit('')
        self.pulse2 = QLineEdit('')
        self.timer = QLabel('00:00:15')
        self.v_line = QVBoxLayout()
        self.v_line1 = QVBoxLayout()
        self.v_line.addWidget(name,alignment=Qt.AlignLeft)
        self.v_line.addWidget(name1,alignment=Qt.AlignLeft)
        self.v_line.addWidget(age,alignment=Qt.AlignLeft)
        self.v_line.addWidget(age1,alignment=Qt.AlignLeft)
        self.v_line.addWidget(text1,alignment=Qt.AlignLeft)
        self.v_line.addWidget(text2,alignment=Qt.AlignLeft)
        self.v_line.addWidget(button1,alignment=Qt.AlignLeft)
        self.v_line.addWidget(pulse,alignment=Qt.AlignLeft)
        self.v_line.addWidget(text3,alignment=Qt.AlignLeft)
        self.v_line.addWidget(text4,alignment=Qt.AlignLeft)
        self.v_line.addWidget(button2,alignment=Qt.AlignLeft)
        self.v_line.addWidget(text5,alignment=Qt.AlignLeft)
        self.v_line.addWidget(text6,alignment=Qt.AlignLeft)
        self.v_line.addWidget(text7,alignment=Qt.AlignLeft)
        self.v_line.addWidget(text8,alignment=Qt.AlignLeft)
        self.v_line.addWidget(button3,alignment=Qt.AlignLeft)
        self.v_line.addWidget(pulse1,alignment=Qt.AlignLeft)
        self.v_line.addWidget(pulse2,alignment=Qt.AlignLeft)
        self.v_line1.addWidget(timer,alignment=Qt.AlignRight)
        self.layout_main = QHBoxLayout()
        self.layout_main.addLayout(v_line)
        self.layout_main.addLayout(v_line1)
        self.my_wid.setLayout(layout_main)